buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:0.12.200"
        classpath 'org.zeroturnaround:zt-exec:1.6'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'provided-base'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext.kotlinVersion = '0.12.200'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

test {
    useTestNG()
}

dependencies {
//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: "${kotlinVersion}"
//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    compile 'org.mongodb:mongo-java-driver:3.0.1'
    compile 'org.zeroturnaround:zt-exec:1.7'
    compile 'org.zeroturnaround:zt-process:1.3'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-compress:1.9'
    compile 'com.jayway.awaitility:awaitility:1.6.3'
    compile 'com.github.zafarkhaja:java-semver:0.9.0'

    provided 'org.testng:testng:6.8.21'

    testCompile 'org.slf4j:slf4j-simple:1.7.12'
}

modifyPom {
    project {
        name = 'BottleRocket'
        description = 'An API for programmatically creating MongoDB clusters for use in testing MongoDB based applications and libraries.'
        url 'https://github.com/mongodb/morphia.git'

        scm {
            url 'https://github.com/evanchooly/bottlerocket.git'
            connection 'scm:git:https://github.com/evanchooly/bottlerocket.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                name 'Justin Lee'
            }
        }
    }

    whenConfigured { resultPom ->
        resultPom.dependencies.removeAll { dep -> dep.scope != 'compile' }
        resultPom.dependencies*.scope = null
    }
}